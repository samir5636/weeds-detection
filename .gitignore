# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:



local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/



/captures
.externalNativeBuild
.cxx

# Built application files
*.apk
*.ap_
*.aab

# Gradle files
.gradle/
build/

# Local configuration file (SDK location, keystore passwords, etc.)
local.properties

# Proguard folder generated by Android Studio
proguard/

# IDE configuration files

*.iml

# Keystore files (security-sensitive)
*.jks
*.keystore

# Android Studio Navigation Editor temp files
.navigation/

# Crashlytics files
crashlytics.properties
fabric.properties

# lint/analysis files
lint/intermediates/
lint/generated/
lint/outputs/
lint/tmp/

# Generated files (e.g., by kapt)
annotationProcessor/
generated/

# Android NDK
obj/
libs/

# Ignore any `.env` files for sensitive information
.env
.env.local

# User-specific files
*.swp
*.swo
*.bak

# Java class files
*.class

# Backup and temp files
*.tmp
*.bak
*.swp

# Gradle Wrapper files
!gradle-wrapper.jar
calibration_image_sample_data_20x128x128x3_float32.npy
Weed_Detection5a431d7.zip



# Compiled object files
*.o
*.obj

# Compiled binary files
*.exe
*.out
*.app

# Libraries
*.lib
*.a
*.la
*.lo
*.dll
*.dylib
*.so
*.so.*

# Debug files
*.gch
*.pch
*.pdb

# Dependency files
*.d

# Generated files
*.manifest
*.exp

# CMake files
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
Makefile

# Visual Studio files
*.vcxproj
*.vcxproj.filters
*.vcxproj.user
*.sln
*.suo
*.ncb
*.user
*.aps
*.sdf
*.opendb
*.vc.db

# Editor files
.idea/
*.swp
*.swo
*.directory

# Build directories
build/
Debug/
Release/

# Logs and temporary files
*.log
*.tmp
*.temp
*.bak
*.old
*.~*

# OS-specific files
.DS_Store
Thumbs.db

# Output directory for processed files
already_labeled/

# Ignore specific image directories if needed
data/images/
data/labels/
/Output
/runs
/weeds-training-results
